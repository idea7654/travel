[{"/Users/oh/Desktop/react/react-project/src/App.js":"1","/Users/oh/Desktop/react/react-project/src/reportWebVitals.js":"2","/Users/oh/Desktop/react/react-project/src/components/Footer/Footer.js":"3","/Users/oh/Desktop/react/react-project/src/components/Navbar/Navbar.js":"4","/Users/oh/Desktop/react/react-project/src/index.js":"5","/Users/oh/Desktop/react/react-project/src/components/Section/Three.js":"6","/Users/oh/Desktop/react/react-project/src/components/Section/Main.js":"7","/Users/oh/Desktop/react/react-project/src/components/Section/Tokyo.js":"8","/Users/oh/Desktop/react/react-project/src/components/Section/Kagawa.js":"9"},{"size":898,"mtime":1609747361440,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1609640388065,"results":"12","hashOfConfig":"11"},{"size":2914,"mtime":1609765352210,"results":"13","hashOfConfig":"11"},{"size":2786,"mtime":1609690182321,"results":"14","hashOfConfig":"11"},{"size":574,"mtime":1609746937476,"results":"15","hashOfConfig":"11"},{"size":5861,"mtime":1609755415187,"results":"16","hashOfConfig":"11"},{"size":472,"mtime":1609749322787,"results":"17","hashOfConfig":"11"},{"size":4312,"mtime":1609765292595,"results":"18","hashOfConfig":"11"},{"size":4317,"mtime":1609749512685,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1fdnbbl",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/oh/Desktop/react/react-project/src/App.js",["41","42"],"/Users/oh/Desktop/react/react-project/src/reportWebVitals.js",[],["43","44"],"/Users/oh/Desktop/react/react-project/src/components/Footer/Footer.js",["45","46","47","48"],"/Users/oh/Desktop/react/react-project/src/components/Navbar/Navbar.js",["49"],"import React from \"react\";\n\nexport default function Navbar({ fixed }) {\n  const [navbarOpen, setNavbarOpen] = React.useState(false);\n  return (\n    <>\n      <nav className=\"relative flex flex-wrap items-center justify-between px-2 py-3 navbar-expand-lg bg-green-300 mb-3\">\n        <div className=\"container px-4 mx-auto flex flex-wrap items-center justify-between\">\n            <div className=\"w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start\">\n                <a\n                  className=\"text-sm font-bold leading-relaxed inline-block mr-4 py-2 whitespace-no-wrap uppercase text-white\"\n                  href=\"#pablo\"\n                >\n                  <img className=\"h-20 mt-3\" src={process.env.PUBLIC_URL + '/LOGO.png'} />\n                </a>\n                <button\n                  className=\"text-white cursor-pointer text-xl leading-none px-3 py-1 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\n                  type=\"button\"\n                  onClick={() => setNavbarOpen(!navbarOpen)}\n                >\n              <i className=\"fas fa-bars\"></i>\n            </button>\n          </div>\n          <div\n            className={\n              \"lg:flex flex-grow items-center\" +\n              (navbarOpen ? \" flex\" : \" hidden\")\n            }\n            id=\"example-navbar-danger\"\n          >\n            <ul className=\"flex flex-col lg:flex-row list-none lg:ml-auto\">\n              <li className=\"nav-item\">\n                <a\n                  className=\"px-3 py-2 flex items-center text-xs uppercase font-bold leading-snug text-white hover:opacity-75\"\n                  href=\"#pablo\"\n                >\n                  <i className=\"fab fa-facebook-square text-lg leading-lg text-white opacity-75\"></i><span className=\"ml-2\">Share</span>\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"px-3 py-2 flex items-center text-xs uppercase font-bold leading-snug text-white hover:opacity-75\"\n                  href=\"#pablo\"\n                >\n                  <i className=\"fab fa-twitter text-lg leading-lg text-white opacity-75\"></i><span className=\"ml-2\">Tweet</span>\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"px-3 py-2 flex items-center text-xs uppercase font-bold leading-snug text-white hover:opacity-75\"\n                  href=\"#pablo\"\n                >\n                  <i className=\"fab fa-pinterest text-lg leading-lg text-white opacity-75\"></i><span className=\"ml-2\">Pin</span>\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n}\n","/Users/oh/Desktop/react/react-project/src/index.js",[],"/Users/oh/Desktop/react/react-project/src/components/Section/Three.js",["50","51","52","53","54","55"],"import React, {useState, useEffect, useRef} from 'react';\nimport * as THREE from 'three';\nimport { Interaction } from 'three.interaction';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {ColladaLoader} from 'three/examples/jsm/loaders/ColladaLoader';\n\nconst Three = ({onSelect}) => {\n    const ref = useRef();\n    useEffect(()=>{\n        const scene = new THREE.Scene();\n        const camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );\n        const renderer = new THREE.WebGLRenderer({\n            antialias: true\n        });\n        const model = new THREE.Object3D();\n        scene.background = new THREE.Color(\"#FFFFFF\"); //배경색 지정\n        renderer.setSize( window.innerWidth, window.innerHeight );\n        // document.body.appendChild( renderer.domElement );\n        // use ref as a mount point of the Three.js scene instead of the document.body\n        ref.current.appendChild(renderer.domElement);\n\n        let flag = null;\n        let kagawa = null;\n        let tokyo = null;\n        \n\n        const controls = new OrbitControls(camera, renderer.domElement);\n        controls.enableKeys = false;\n        controls.enableZoom = false;\n        controls.rotateSpeed = 0.3;\n        camera.position.x = 10;\n        camera.position.y = 10;\n        camera.position.z = 0;\n        controls.update();\n\n        const color = 0xFFFFFF;\n        const intensity = 2;\n\n        {\n            const light = new THREE.DirectionalLight(color, intensity);\n            light.position.set(1, 1, 1);\n            scene.add(light);\n            \n            const light2 = new THREE.DirectionalLight(color, intensity);\n            light2.position.set(-1, -1, -1);\n            scene.add(light2);\n            \n            const light3 = new THREE.DirectionalLight(color, intensity);\n            light3.position.set(20, 0, 0);\n            scene.add(light3);\n            \n            const light4 = new THREE.DirectionalLight(color, intensity);\n            light4.position.set(0, 20, 0);\n            scene.add(light4);\n            \n            const light5 = new THREE.DirectionalLight(color, intensity);\n            light5.position.set(0, 0, 20);\n            scene.add(light5);\n        }\n\n        const load = function(){\n            const loader = new ColladaLoader();\n\n            loader.load(process.env.PUBLIC_URL + '/model 3.dae', (collada) => {\n                const box = new THREE.Box3().setFromObject(collada.scene);\n                const boxSize = box.getSize(new THREE.Vector3()).length();\n                const boxCenter = box.getCenter(new THREE.Vector3());\n\n                controls.target.copy(boxCenter);\n                for(let i = 0; i < 15; i++){\n                    controls.dollyIn();\n                }\n                controls.update();\n                \n                collada.scene.children[0].children.forEach((i) => {\n                    if(i.children[0]){\n                        i.children[0].material[0] = new THREE.MeshLambertMaterial({color: 'rgb(62, 76, 51)'});\n                    }\n                });\n\n                model.add(collada.scene);\n                scene.add(model);\n                //console.log(collada.scene.children[0].children);\n                kagawa = collada.scene.children[0].children[29];\n                tokyo = collada.scene.children[0].children[12];\n\n                kagawa.children[0].material[0] = new THREE.MeshLambertMaterial({color: 'rgb(46, 65, 33)'});\n                tokyo.children[0].material[0] = new THREE.MeshLambertMaterial({color: 'rgb(46, 65, 33)'});\n\n                kagawa.name = \"kagawa\";\n                tokyo.name = \"tokyo\";\n\n                const interaction = new Interaction(renderer, kagawa, camera);\n                kagawa.on('mousemove', (ev) => {\n                    flag = \"kagawa\";\n                    onSelect(\"kagawa\");\n                });\n                const interactionTokyo = new Interaction(renderer, tokyo, camera);\n                tokyo.on('mousemove', (ev) => {\n                    flag = \"tokyo\";\n                    onSelect(\"tokyo\");\n                });\n            });\n        }\n\n        const resizeRendererToDisplaySize = function(renderer) {\n            const canvas = renderer.domElement;\n            const width = canvas.clientWidth;\n            const height = canvas.clientHeight;\n            const needResize = canvas.width !== width || canvas.height !== height;\n            if (needResize) {\n                renderer.setSize(width, height, false);\n            }\n            return needResize;\n        }\n        const texLoader = new THREE.TextureLoader();\n\n        const move = function(obj){\n            if(obj.name && flag === obj.name){\n                if(obj.position.z < 3){\n                    obj.position.z += 0.1;\n                    obj.children[0].material[0] = new THREE.MeshLambertMaterial({color: 0x000000});\n                }\n            }else if(flag && obj.name){\n                if(obj.position.z >= 0){\n                    obj.position.z -= 0.1;\n                    obj.children[0].material[0] = new THREE.MeshLambertMaterial({color: 'rgb(46, 65, 33)'});\n                }\n            }\n        }\n        const animate = function () {\n            if (resizeRendererToDisplaySize(renderer)) {\n                const canvas = renderer.domElement;\n                camera.aspect = canvas.clientWidth / canvas.clientHeight;\n                camera.updateProjectionMatrix();\n            }\n            requestAnimationFrame( animate );\n\n            if(kagawa){\n                move(kagawa);\n            }\n            if(tokyo){\n                move(tokyo);\n            }\n\n            renderer.render( scene, camera );\n        }\n        load();\n        animate();\n    },[]);\n\n    return (\n        <div className=\"h-4/5\" ref={ref}>\n        </div>\n    );\n}\n\nexport default Three;\n","/Users/oh/Desktop/react/react-project/src/components/Section/Main.js",[],"/Users/oh/Desktop/react/react-project/src/components/Section/Tokyo.js",[],"/Users/oh/Desktop/react/react-project/src/components/Section/Kagawa.js",[],{"ruleId":"56","severity":1,"message":"57","line":1,"column":26,"nodeType":"58","messageId":"59","endLine":1,"endColumn":35},{"ruleId":"56","severity":1,"message":"60","line":11,"column":10,"nodeType":"58","messageId":"59","endLine":11,"endColumn":18},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":7,"column":17,"nodeType":"67","endLine":7,"endColumn":60},{"ruleId":"65","severity":1,"message":"66","line":10,"column":21,"nodeType":"67","endLine":10,"endColumn":84},{"ruleId":"65","severity":1,"message":"66","line":16,"column":21,"nodeType":"67","endLine":16,"endColumn":84},{"ruleId":"65","severity":1,"message":"66","line":23,"column":21,"nodeType":"67","endLine":23,"endColumn":84},{"ruleId":"68","severity":1,"message":"69","line":14,"column":19,"nodeType":"67","endLine":14,"endColumn":91},{"ruleId":"56","severity":1,"message":"70","line":1,"column":16,"nodeType":"58","messageId":"59","endLine":1,"endColumn":24},{"ruleId":"56","severity":1,"message":"71","line":66,"column":23,"nodeType":"58","messageId":"59","endLine":66,"endColumn":30},{"ruleId":"56","severity":1,"message":"72","line":93,"column":23,"nodeType":"58","messageId":"59","endLine":93,"endColumn":34},{"ruleId":"56","severity":1,"message":"73","line":98,"column":23,"nodeType":"58","messageId":"59","endLine":98,"endColumn":39},{"ruleId":"56","severity":1,"message":"74","line":116,"column":15,"nodeType":"58","messageId":"59","endLine":116,"endColumn":24},{"ruleId":"75","severity":1,"message":"76","line":150,"column":7,"nodeType":"77","endLine":150,"endColumn":9,"suggestions":"78"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Selected' is assigned a value but never used.","no-native-reassign",["79"],"no-negated-in-lhs",["80"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useState' is defined but never used.","'boxSize' is assigned a value but never used.","'interaction' is assigned a value but never used.","'interactionTokyo' is assigned a value but never used.","'texLoader' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onSelect'. Either include it or remove the dependency array. If 'onSelect' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["81"],"no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},"Update the dependencies array to be: [onSelect]",{"range":"84","text":"85"},[5743,5745],"[onSelect]"]